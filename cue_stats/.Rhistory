facet_wrap(~ age) +
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
guides(alpha = F)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_color_solarized(name="Condition",
breaks=c("false", "true"),
labels=c("Test", "Control - Barrier"))
ms <- d %>%
filter(trial == "test") %>%
group_by(control,age, test_date) %>%
summarise(correct = mean(correct))
ms2 <- ms %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = ms, aes(x = control, y = correct, col = control, alpha = .5), width = .2,height = .015)+
geom_pointrange(data = ms2,aes(x = control, y = mean, col = control,ymin = ci_lower, ymax = ci_upper), size = 1)+
facet_wrap(~ age) +
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
guides(alpha = F)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_color_solarized(name="Condition",
breaks=c("false", "true"),
labels=c("Test", "Control - Barrier"))
ms
ms <- d %>%
filter(trial_type == "test") %>%
group_by(control,age, test_date) %>%
summarise(correct = mean(correct))
ms2 <- ms %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = ms, aes(x = control, y = correct, col = control, alpha = .5), width = .2,height = .015)+
geom_pointrange(data = ms2,aes(x = control, y = mean, col = control,ymin = ci_lower, ymax = ci_upper), size = 1)+
facet_wrap(~ age) +
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
guides(alpha = F)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_color_solarized(name="Condition",
breaks=c("false", "true"),
labels=c("Test", "Control - Barrier"))
ms
d%>%
group_by(trial_type, control,test_date)%>%
summarise(n = length(trial),
mean = mean(correct))
d%>%
group_by(age)%>%
summarise(n = length(unique(test_date)))
ggplot() +
geom_jitter(data = ms, aes(x = control, y = correct, col = control, alpha = .5), width = .2,height = .015)+
geom_pointrange(data = ms2,aes(x = control, y = mean, col = control,ymin = ci_lower, ymax = ci_upper), size = 1)+
facet_wrap(~ age) +
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
guides(alpha = F)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_color_solarized(name="Condition",
breaks=c("false", "true"),
labels=c("Test", "Control - Barrier"))
ggplot() +
geom_jitter(data = ms, aes(x = control, y = correct, col = control, alpha = .5), width = .3,height = .015)+
geom_pointrange(data = ms2,aes(x = control, y = mean, col = control,ymin = ci_lower, ymax = ci_upper), size = 1)+
facet_wrap(~ age) +
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
guides(alpha = F)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_color_solarized(name="Condition",
breaks=c("false", "true"),
labels=c("Test", "Control - Barrier"))
ms
ms2
## importing data
d <- read_csv(file="kids_cue_barrier_data.csv")
library(tidyverse)
library(knitr)
library(langcog)
library(ggthemes)
## importing data
d <- read_csv(file="kids_cue_barrier_data.csv")
d%>%
group_by(age)%>%
summarise(n = length(unique(test_date)))
d%>%
group_by(trial_type, control,test_date)%>%
summarise(n = length(trial),
mean = mean(correct))
ms <- d %>%
filter(trial_type == "test") %>%
group_by(control,age, test_date) %>%
summarise(correct = mean(correct))
ms2 <- ms %>%
multi_boot_standard(col = "correct")
ms2 <- ms %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = ms, aes(x = control, y = correct, col = control, alpha = .5), width = .3,height = .015)+
geom_pointrange(data = ms2,aes(x = control, y = mean, col = control,ymin = ci_lower, ymax = ci_upper), size = 1)+
facet_wrap(~ age) +
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
guides(alpha = F)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_color_solarized(name="Condition",
breaks=c("false", "true"),
labels=c("Test", "Control - Barrier"))
library(rjson)
library(tidyr)
library(stringr)
library(dplyr)
library(data.table)
files <- dir("~/Work/CueStrength/raw_data_kids")
raw <- data.frame()
for (f in files) {
jf <- paste("~/Work/CueStrength/raw_data_kids/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- data.frame(test_date= jf,
data = jd$data$data
)
raw <- bind_rows(raw, id)
}
# convert into short format, drop unnecessary columns, rename variables and sort by id
inf.data= melt(setDT(raw), measure = patterns( "^data.subid","^data.subage","^data.experiment","^data.trial","^data.control","^data.agent","^data.leftFruit","^data.rightFruit","^data.tablePositionCorr","^data.pick","^data.inf","^data.rt", "^data.correct"))
names(inf.data) = c("test_date","alltrial","subid","age","condition","trial","control","agent","leftObject","rightObject","targetOnTable","pick","target","rt","correct")
inf.data <- inf.data %>%
mutate(test_date = str_sub(test_date,42,str_length(test_date)-5),
pick = str_sub(pick,56,str_length(pick)-4),
trial_type = ifelse(trial == "train1" | trial == "train2", "train", "test"))
write.csv(inf.data, file="kids_cue_barrier_data.csv")
## importing data
d <- read_csv(file="kids_cue_barrier_data.csv")
###
library(tidyverse)
library(knitr)
library(langcog)
library(ggthemes)
## importing data
d <- read_csv(file="kids_cue_barrier_data.csv")
d%>%
group_by(age)%>%
summarise(n = length(unique(test_date)))
d%>%
group_by(trial_type, control,test_date)%>%
summarise(n = length(trial),
mean = mean(correct))
ms <- d %>%
filter(trial_type == "test") %>%
group_by(control,age, test_date) %>%
summarise(correct = mean(correct))
ms2 <- ms %>%
multi_boot_standard(col = "correct")
ms2 <- ms %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = ms, aes(x = control, y = correct, col = control, alpha = .5), width = .3,height = .015)+
geom_pointrange(data = ms2,aes(x = control, y = mean, col = control,ymin = ci_lower, ymax = ci_upper), size = 1)+
facet_wrap(~ age) +
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
guides(alpha = F)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_color_solarized(name="Condition",
breaks=c("false", "true"),
labels=c("Test", "Control - Barrier"))
ms <- d %>%
filter(trial_type == "test") %>%
group_by(control, test_date) %>%
summarise(correct = mean(correct))
ms2 <- ms %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = ms, aes(x = control, y = correct, col = control, alpha = .5), width = .3,height = .015)+
geom_pointrange(data = ms2,aes(x = control, y = mean, col = control,ymin = ci_lower, ymax = ci_upper), size = 1)+
#facet_wrap(~ age) +
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
guides(alpha = F)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_color_solarized(name="Condition",
breaks=c("false", "true"),
labels=c("Test", "Control - Barrier"))
ms <- d %>%
filter(trial_type == "test") %>%
group_by(control, test_date) %>%
summarise(correct = mean(correct))
ms2 <- ms %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = ms, aes(x = control, y = correct, col = control, alpha = .5), width = .3,height = .015)+
geom_pointrange(data = ms2,aes(x = control, y = mean, col = control,ymin = ci_lower, ymax = ci_upper), size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
guides(alpha = F)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_color_solarized(name="Condition",
breaks=c("false", "true"),
labels=c("Test", "Control - Barrier"))
ms <- d %>%
filter(trial_type == "test") %>%
group_by(control,age, test_date) %>%
summarise(correct = mean(correct))
ms2 <- ms %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = ms, aes(x = control, y = correct, col = control, alpha = .5), width = .3,height = .015)+
geom_pointrange(data = ms2,aes(x = control, y = mean, col = control,ymin = ci_lower, ymax = ci_upper), size = 1)+
facet_wrap(~ age) +
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
guides(alpha = F)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_color_solarized(name="Condition",
breaks=c("false", "true"),
labels=c("Test", "Control - Barrier"))
## model
library(brms)
install.packages("brms")
## model
library(brms)
data_inf <- d %>%
filter(trial_type == "test") %>%
mutate(control  = as.factor(control))
data_inf$control =  relevel(data_inf$control,"no")
data_inf
# registered  model
bm <- brm(correct ~ control +
(control |id) + (control |agent),
data = data_inf, family = bernoulli(),
control = list(adapt_delta = 0.90),
iter = 5000)
# registered  model
bm <- brm(correct ~ control +
(control |subid) + (control |agent),
data = data_inf, family = bernoulli(),
control = list(adapt_delta = 0.90),
iter = 5000)
summary(bm)
d%>%
group_by(trial_type, control,test_date)%>%
summarise(n = length(trial),
mean = mean(correct))
d%>%
group_by(age)%>%
summarise(n = length(unique(test_date)))
3*24
3*24+24
library(rjson)
library(tidyr)
library(stringr)
library(dplyr)
library(data.table)
files <- dir("~/Work/CueStrength/raw_data_kids")
raw <- data.frame()
for (f in files) {
jf <- paste("~/Work/CueStrength/raw_data_kids/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- data.frame(test_date= jf,
data = jd$data$data
)
raw <- bind_rows(raw, id)
}
# convert into short format, drop unnecessary columns, rename variables and sort by id
inf.data= melt(setDT(raw), measure = patterns( "^data.subid","^data.subage","^data.experiment","^data.trial","^data.control","^data.agent","^data.leftFruit","^data.rightFruit","^data.tablePositionCorr","^data.pick","^data.inf","^data.rt", "^data.correct"))
names(inf.data) = c("test_date","alltrial","subid","age","condition","trial","control","agent","leftObject","rightObject","targetOnTable","pick","target","rt","correct")
inf.data <- inf.data %>%
mutate(test_date = str_sub(test_date,42,str_length(test_date)-5),
pick = str_sub(pick,56,str_length(pick)-4),
trial_type = ifelse(trial == "train1" | trial == "train2", "train", "test"))
write.csv(inf.data, file="kids_cue_barrier_data.csv")
## importing data
d <- read_csv(file="kids_cue_barrier_data.csv")
d%>%
group_by(age)%>%
summarise(n = length(unique(test_date)))
d%>%
group_by(trial_type, control,test_date)%>%
summarise(n = length(trial),
mean = mean(correct))
## importing data
d <- read_csv(file="kids_cue_barrier_data.csv")
d%>%
group_by(age)%>%
summarise(n = length(unique(test_date)))
d%>%
group_by(trial_type, control,test_date)%>%
summarise(n = length(trial),
mean = mean(correct))
ms <- d %>%
filter(trial_type == "test") %>%
group_by(control, test_date) %>%
summarise(correct = mean(correct))
ms2 <- ms %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = ms, aes(x = control, y = correct, col = control, alpha = .5), width = .3,height = .015)+
geom_pointrange(data = ms2,aes(x = control, y = mean, col = control,ymin = ci_lower, ymax = ci_upper), size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
guides(alpha = F)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_color_solarized(name="Condition",
breaks=c("false", "true"),
labels=c("Test", "Control - Barrier"))
ms <- d %>%
filter(trial_type == "test") %>%
group_by(control,age, test_date) %>%
summarise(correct = mean(correct))
ms2 <- ms %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = ms, aes(x = control, y = correct, col = control, alpha = .5), width = .3,height = .015)+
geom_pointrange(data = ms2,aes(x = control, y = mean, col = control,ymin = ci_lower, ymax = ci_upper), size = 1)+
facet_wrap(~ age) +
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
guides(alpha = F)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_color_solarized(name="Condition",
breaks=c("false", "true"),
labels=c("Test", "Control - Barrier"))
library(rjson)
library(tidyr)
library(stringr)
library(dplyr)
library(data.table)
files <- dir("~/Work/CueStrength/raw_data_kids")
raw <- data.frame()
for (f in files) {
jf <- paste("~/Work/CueStrength/raw_data_kids/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- data.frame(test_date= jf,
data = jd$data$data
)
raw <- bind_rows(raw, id)
}
# convert into short format, drop unnecessary columns, rename variables and sort by id
inf.data= melt(setDT(raw), measure = patterns( "^data.subid","^data.subage","^data.experiment","^data.trial","^data.control","^data.agent","^data.leftFruit","^data.rightFruit","^data.tablePositionCorr","^data.pick","^data.inf","^data.rt", "^data.correct"))
names(inf.data) = c("test_date","alltrial","subid","age","condition","trial","control","agent","leftObject","rightObject","targetOnTable","pick","target","rt","correct")
inf.data <- inf.data %>%
mutate(test_date = str_sub(test_date,42,str_length(test_date)-5),
pick = str_sub(pick,56,str_length(pick)-4),
trial_type = ifelse(trial == "train1" | trial == "train2", "train", "test"))
write.csv(inf.data, file="kids_cue_barrier_data.csv")
## importing data
d <- read_csv(file="kids_cue_barrier_data.csv")
d%>%
group_by(age)%>%
summarise(n = length(unique(test_date)))
ms <- d %>%
filter(trial_type == "test") %>%
group_by(control, test_date) %>%
summarise(correct = mean(correct))
ms2 <- ms %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = ms, aes(x = control, y = correct, col = control, alpha = .5), width = .3,height = .015)+
geom_pointrange(data = ms2,aes(x = control, y = mean, col = control,ymin = ci_lower, ymax = ci_upper), size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
guides(alpha = F)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_color_solarized(name="Condition",
breaks=c("false", "true"),
labels=c("Test", "Control - Barrier"))
ms <- d %>%
filter(trial_type == "test") %>%
group_by(control,age, test_date) %>%
summarise(correct = mean(correct))
ms2 <- ms %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = ms, aes(x = control, y = correct, col = control, alpha = .5), width = .3,height = .015)+
geom_pointrange(data = ms2,aes(x = control, y = mean, col = control,ymin = ci_lower, ymax = ci_upper), size = 1)+
facet_wrap(~ age) +
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
guides(alpha = F)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_color_solarized(name="Condition",
breaks=c("false", "true"),
labels=c("Test", "Control - Barrier"))
library(rjson)
library(tidyr)
library(stringr)
library(dplyr)
library(data.table)
files <- dir("~/Work/CueStrength/raw_data_kids")
raw <- data.frame()
for (f in files) {
jf <- paste("~/Work/CueStrength/raw_data_kids/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- data.frame(test_date= jf,
data = jd$data$data
)
raw <- bind_rows(raw, id)
}
# convert into short format, drop unnecessary columns, rename variables and sort by id
inf.data= melt(setDT(raw), measure = patterns( "^data.subid","^data.subage","^data.experiment","^data.trial","^data.control","^data.agent","^data.leftFruit","^data.rightFruit","^data.tablePositionCorr","^data.pick","^data.inf","^data.rt", "^data.correct"))
names(inf.data) = c("test_date","alltrial","subid","age","condition","trial","control","agent","leftObject","rightObject","targetOnTable","pick","target","rt","correct")
inf.data <- inf.data %>%
mutate(test_date = str_sub(test_date,42,str_length(test_date)-5),
pick = str_sub(pick,56,str_length(pick)-4),
trial_type = ifelse(trial == "train1" | trial == "train2", "train", "test"))
write.csv(inf.data, file="kids_cue_barrier_data.csv")
## importing data
d <- read_csv(file="kids_cue_barrier_data.csv")
d%>%
group_by(age)%>%
summarise(n = length(unique(test_date)))
ms <- d %>%
filter(trial_type == "test") %>%
group_by(control, test_date) %>%
summarise(correct = mean(correct))
ms2 <- ms %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = ms, aes(x = control, y = correct, col = control, alpha = .5), width = .3,height = .015)+
geom_pointrange(data = ms2,aes(x = control, y = mean, col = control,ymin = ci_lower, ymax = ci_upper), size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
guides(alpha = F)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_color_solarized(name="Condition",
breaks=c("false", "true"),
labels=c("Test", "Control - Barrier"))
ms <- d %>%
filter(trial_type == "test") %>%
group_by(control,age, test_date) %>%
summarise(correct = mean(correct))
ms2 <- ms %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = ms, aes(x = control, y = correct, col = control, alpha = .5), width = .3,height = .015)+
geom_pointrange(data = ms2,aes(x = control, y = mean, col = control,ymin = ci_lower, ymax = ci_upper), size = 1)+
facet_wrap(~ age) +
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
guides(alpha = F)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_color_solarized(name="Condition",
breaks=c("false", "true"),
labels=c("Test", "Control - Barrier"))
data_inf <- d %>%
filter(trial_type == "test") %>%
mutate(control  = as.factor(control))
# registered  model
bm <- brm(correct ~ control +
(control |subid) + (control |agent),
data = data_inf, family = bernoulli(),
control = list(adapt_delta = 0.90),
iter = 5000)
summary(bm)
## performance in training and test
ms <- d %>%
filter(trial_type == "test") %>%
group_by(targetOnTable,control,experiment, id) %>%
summarise(correct = mean(correct)) %>%
multi_boot_standard(col = "correct")
## performance in training and test
ms <- d %>%
filter(trial_type == "test") %>%
group_by(targetOnTable,control, subid) %>%
summarise(correct = mean(correct)) %>%
multi_boot_standard(col = "correct")
ggplot(ms,
aes(x = control, y = mean, fill = control,frame = targetOnTable)) +
geom_bar(stat="identity") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper)) +
geom_hline(yintercept = 0.5, lty=2)+
facet_wrap(~targetOnTable ) +
labs(x="",y="Proportion Expected Choice")+
theme_few(base_size = 12) +
ylim(0,1)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_fill_solarized(name="Condition",
breaks=c("abs", "bar","no"),
labels=c("Control - Later", "Control - Barrier","Test"))
