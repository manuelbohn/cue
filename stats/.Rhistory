data=np, family=binomial, control = contr)
contr=glmerControl(optimizer="bobyqa", optCtrl=list(maxfun=100000000))
l <- glmer(corr~ unique_group+ trial+
(trial||id),
data=np, family=binomial, control = contr)
drop1(l, test = "Chi")
knitr::opts_chunk$set(echo = TRUE)
library(jsonlite)
library(tidyr)
library(stringr)
library(dplyr)
files <- dir("sandbox-results")
raw_data <- data_frame()
for (f in files) {
jf <- paste("sandbox-results/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- as_data_frame(jd$answers$data$data) %>%
mutate(workerid = jd$WorkerId)
raw_data <- bind_rows(raw_data, id)
}
raw_data
raw_data
files <- dir("~/Work/CueStrength/nosub_unintentional_tornado_between/sandbox-results/")
raw <- data.frame()
for (f in files) {
jf <- paste("~/Work/CueStrength/nosub_unintentional_tornado_between/production-results/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- data.frame(workerid = jd$WorkerId,
data = jd$answers$data$data
)
raw <- bind_rows(raw, id)
}
setwd("~/Work/CueStrength/git/stats/")
files <- dir("~/Work/CueStrength/nosub_unintentional_tornado_between/sandbox-results/")
raw <- data.frame()
for (f in files) {
jf <- paste("~/Work/CueStrength/nosub_unintentional_tornado_between/sandbox-results/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- data.frame(workerid = jd$WorkerId,
data = jd$answers$data$data
)
raw <- bind_rows(raw, id)
}
inf.data= melt(setDT(raw), measure = patterns( "^data.experiment","^data.cond","^data.control","^data.agent","^data.leftFruit","^data.rightFruit","^data.tablePositionCorr","^data.pick","^data.inf","^data.trial","^data.rt", "^data.correct"))
library(rjson)
library(tidyr)
library(stringr)
library(dplyr)
library(data.table)
inf.data= melt(setDT(raw), measure = patterns( "^data.experiment","^data.cond","^data.control","^data.agent","^data.leftFruit","^data.rightFruit","^data.tablePositionCorr","^data.pick","^data.inf","^data.trial","^data.rt", "^data.correct"))
names(inf.data) = c("id","alltrial","experiment","condition","control","agent","leftObject","rightObject","targetOnTable","pick","target","trial","rt","correct")
inf.data $pick= str_sub(inf.data $pick,60,str_length(inf.data $pick)-4)
inf.data = inf.data[!duplicated(inf.data), ]
inf.data = inf.data[order(id)]
inf.data
files <- dir("~/Work/CueStrength/nosub_unintentional_between/sandbox-results/")
raw <- data.frame()
for (f in files) {
jf <- paste("~/Work/CueStrength/nosub_unintentional_between/sandbox-results/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- data.frame(workerid = jd$WorkerId,
data = jd$answers$data$data
)
raw <- bind_rows(raw, id)
}
# convert into short format, drop unnecessary columns, rename variables and sort by id
inf.data= melt(setDT(raw), measure = patterns( "^data.experiment","^data.cond","^data.control","^data.agent","^data.leftFruit","^data.rightFruit","^data.tablePositionCorr","^data.pick","^data.inf","^data.trial","^data.rt", "^data.correct"))
names(inf.data) = c("id","alltrial","experiment","condition","control","agent","leftObject","rightObject","targetOnTable","pick","target","trial","rt","correct")
inf.data $pick= str_sub(inf.data $pick,60,str_length(inf.data $pick)-4)
inf.data = inf.data[!duplicated(inf.data), ]
inf.data = inf.data[order(id)]
inf.data
15*8
setwd("~/Work/CueStrength/git/stats/")
files <- dir("~/Work/CueStrength/nosub_unintentional_between/production-results/")
raw <- data.frame()
for (f in files) {
jf <- paste("~/Work/CueStrength/nosub_unintentional_between/production-results/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- data.frame(workerid = jd$WorkerId,
data = jd$answers$data$data
)
raw <- bind_rows(raw, id)
}
inf.data= melt(setDT(raw), measure = patterns( "^data.experiment","^data.cond","^data.control","^data.agent","^data.leftFruit","^data.rightFruit","^data.tablePositionCorr","^data.pick","^data.inf","^data.trial","^data.rt", "^data.correct"))
names(inf.data) = c("id","alltrial","experiment","condition","control","agent","leftObject","rightObject","targetOnTable","pick","target","trial","rt","correct")
inf.data $pick= str_sub(inf.data $pick,60,str_length(inf.data $pick)-4)
inf.data = inf.data[!duplicated(inf.data), ]
inf.data = inf.data[order(id)]
inf.data$trial[inf.data$trial=="train1"]="train"
inf.data$trial[inf.data$trial=="train2"]="train"
head(inf.data)
write.csv(inf.data, file="cue_unintentional_between.data.csv")
files <- dir("~/Work/CueStrength/nosub_unintentional_tornado_between/production-results/")
#combine files into one dataframe
raw <- data.frame()
for (f in files) {
jf <- paste("~/Work/CueStrength/nosub_unintentional_tornado_between/production-results/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- data.frame(workerid = jd$WorkerId,
data = jd$answers$data$data
)
raw <- bind_rows(raw, id)
}
inf.data= melt(setDT(raw), measure = patterns( "^data.experiment","^data.cond","^data.control","^data.agent","^data.leftFruit","^data.rightFruit","^data.tablePositionCorr","^data.pick","^data.inf","^data.trial","^data.rt", "^data.correct"))
names(inf.data) = c("id","alltrial","experiment","condition","control","agent","leftObject","rightObject","targetOnTable","pick","target","trial","rt","correct")
inf.data $pick= str_sub(inf.data $pick,60,str_length(inf.data $pick)-4)
inf.data = inf.data[!duplicated(inf.data), ]
inf.data = inf.data[order(id)]
#inf.data $id = paste(inf.data $id, inf.data $experiment,sep="_")
inf.data$trial[inf.data$trial=="train1"]="train"
inf.data$trial[inf.data$trial=="train2"]="train"
head(inf.data)
write.csv(inf.data, file="cue_unintentional_tornado_between.data.csv")
###
library(tidyverse)
library(knitr)
library(langcog)
library(ggthemes)
d <- bind_rowns(read_csv(file="cue_unintentional_tornado_between.data.csv"),
read_csv(file="cue_unintentional_between.data.csv"))%>%
mutate(trial_type = ifelse(trial == "train", "train", "test"))
d <- bind_rows(read_csv(file="cue_unintentional_tornado_between.data.csv"),
read_csv(file="cue_unintentional_between.data.csv"))%>%
mutate(trial_type = ifelse(trial == "train", "train", "test"))
d %>%
filter(trial_type == "train") %>%
group_by(id)%>%
summarise(correct = mean(correct)) %>%
filter(correct == 0)
d %>%
group_by(trial_type) %>%
summarise(n = length(unique(id)),
correct = mean(correct)) %>%
knitr::kable(digits = 3)
p1 <- d %>%
filter(trial_type == "test") %>%
group_by(control, id) %>%
summarise(correct = mean(correct))
p2 <- p1 %>%
multi_boot_standard(col = "correct")
p2 <- p1 %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = p1, aes(x = control, y = correct, col = control, alpha = .2),width = .3,height = .025)+
geom_pointrange(data = p2, aes(x = control, y = mean, col = control, ymin = ci_lower, ymax = ci_upper),size = .8)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Condition",
breaks=c("no", "yes"),
labels=c("Test", "Control"))
p1
p2
ggplot() +
geom_jitter(data = p1, aes(x = control, y = correct, col = control, alpha = .2),width = .3,height = .025)+
geom_pointrange(data = p2, aes(x = control, y = mean, col = control, ymin = ci_lower, ymax = ci_upper),size = .8)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
theme_few() +
ylim(-0.05,1.05)+
guides(alpha = F)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
scale_colour_solarized(name="Condition",
breaks=c("no", "yes"),
labels=c("Test", "Control"))
library(BayesFactor)
d %>%
filter(trial_type == "test") %>%
group_by(control, id) %>%
summarise(correct = mean(correct)) %>%
summarise(correct = list(correct)) %>%
group_by(control) %>%
mutate(mean= mean(unlist(correct)),
bf = extractBF(ttestBF(unlist(correct), mu = 0.5))$bf) %>%
select(control,mean,bf) %>%
knitr::kable(digits = 3)
library(brms)
data <- d%>%
filter(trial_type == "test")
bm <- brm(correct ~ control +
(1 |id) + (control |agent),
data = data, family = bernoulli(),
control = list(adapt_delta = 0.99),
iter = 2000)
summary(bm)
d1 <- bind_rows(read_csv(file="cue_control_test.data.csv"),
read_csv(file="cue_control_barrier.data.csv"),
read_csv(file="cue_control_later.data.csv"),
read_csv(file="cue_control_1.data.csv"),
read_csv(file="cue_control_2.data.csv"),
read_csv(file="cue_within.data.csv"),
read_csv(file="cue.btw.look.data.csv"),
read_csv(file="cue.btw.lookLabel.data.csv"),
read_csv(file="cue.btw.point.data.csv"),
read_csv(file="cue.btw.pointLabel.data.csv")) %>%
mutate(trial_type = ifelse(trial == "train", "train", "test")) %>%
mutate(control = ifelse(is.na(control) , "test", control)) %>%
mutate(condition = ifelse(control == "no" | control == "test" , condition, control)) %>%
mutate(phase = ifelse(control == "test", "Cue Types", "Epistemic Control")) %>%
mutate(design = ifelse(experiment == "cue_strength_controls" | experiment == "cue_strength_controls_replication" | experiment == "cue_strength_within" , "Within", "Between"),
condition2 = condition)
d2 <- bind_rows(read_csv(file="cue_unintentional_bell.data.csv"),
read_csv(file="cue_unintentional_person.data.csv"),
read_csv(file="cue_unintentional_tornado.data.csv"))%>%
mutate(trial_type = ifelse(trial == "train", "train", "test"),
condition = ifelse(control == "no",condition, ifelse(experiment == "cue_strength_unintentional_tornado", "tornado", ifelse(experiment == "cue_strength_unintentional_person", "person", "bell"))),
phase = "Intentional Control",
design = "Within") %>%
mutate(condition2 = paste(experiment,control,sep="_"))
d3 <- bind_rows(read_csv(file="cue_unintentional_tornado_between.data.csv"),
read_csv(file="cue_unintentional_between.data.csv"))%>%
mutate(trial_type = ifelse(trial == "train", "train", "test"),
condition = ifelse(control == "no",condition,"tornado"),
phase = "Intentional Control",
design = "Between") %>%
mutate(condition2 = paste(experiment,control,sep="_"))
d <- bind_rows(d1,d2,d3)
ms <- d %>%
filter(trial_type == "test") %>%
mutate(design = relevel(as.factor(design), ref = "Within")) %>%
group_by(condition2,condition, design ,phase, id) %>%
summarise(correct = mean(correct))
ms2 <- ms %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = ms, aes(x = condition2, y = correct, col = condition, alpha = .2), width = .2,height = .015)+
geom_pointrange(data = ms2,aes(x = condition2, y = mean, col = condition,ymin = ci_lower, ymax = ci_upper), size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
facet_grid(design ~ phase , scales = "free_x", space = "free_x" ) +
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
guides(alpha = F)+
scale_color_solarized(name="Condition",
breaks=c("look", "lookLabel","point", "pointLabel","abs", "bar","bell","person","tornado"),
labels=c("Test - Look", "Test - Look + Label", "Test - Point", "Test - Point + Label","Control - Later", "Control - Barrier", "Control - Bell", "Control - Person", "Control - Tornado"))
d3
d2
d3 <- bind_rows(read_csv(file="cue_unintentional_tornado_between.data.csv"),
read_csv(file="cue_unintentional_between.data.csv"))%>%
mutate(trial_type = ifelse(trial == "train", "train", "test"),
condition = ifelse(control == "no",condition,"tornado"),
phase = "Intentional Control",
design = "Between") %>%
mutate(condition2 = ifelse(control == "yes", "cue_strength_unintentional_tornado_yes","cue_strength_unintentional_tornado_no"))
d <- bind_rows(d1,d2,d3)
ms <- d %>%
filter(trial_type == "test") %>%
mutate(design = relevel(as.factor(design), ref = "Within")) %>%
group_by(condition2,condition, design ,phase, id) %>%
summarise(correct = mean(correct))
ms2 <- ms %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = ms, aes(x = condition2, y = correct, col = condition, alpha = .2), width = .2,height = .015)+
geom_pointrange(data = ms2,aes(x = condition2, y = mean, col = condition,ymin = ci_lower, ymax = ci_upper), size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
facet_grid(design ~ phase , scales = "free_x", space = "free_x" ) +
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
guides(alpha = F)+
scale_color_solarized(name="Condition",
breaks=c("look", "lookLabel","point", "pointLabel","abs", "bar","bell","person","tornado"),
labels=c("Test - Look", "Test - Look + Label", "Test - Point", "Test - Point + Label","Control - Later", "Control - Barrier", "Control - Bell", "Control - Person", "Control - Tornado"))
d2
d3
ggplot() +
geom_jitter(data = ms, aes(x = condition2, y = correct, col = condition, alpha = .2), width = .2,height = .015)+
geom_pointrange(data = ms2,aes(x = condition2, y = mean, col = condition,ymin = ci_lower, ymax = ci_upper), size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
facet_grid(design ~ phase , scales = "free_x", space = "free_x" ) +
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
guides(alpha = F)
d3
d1
d3 <- bind_rows(read_csv(file="cue_unintentional_tornado_between.data.csv"),
read_csv(file="cue_unintentional_between.data.csv"))%>%
mutate(trial_type = ifelse(trial == "train", "train", "test"),
condition = ifelse(control == "no","lookLabel","tornado"),
phase = "Intentional Control",
design = "Between") %>%
mutate(condition2 = ifelse(control == "yes", "cue_strength_unintentional_tornado_yes","cue_strength_unintentional_tornado_no"))
d <- bind_rows(d1,d2,d3)
ms <- d %>%
filter(trial_type == "test") %>%
mutate(design = relevel(as.factor(design), ref = "Within")) %>%
group_by(condition2,condition, design ,phase, id) %>%
summarise(correct = mean(correct))
ms2 <- ms %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = ms, aes(x = condition2, y = correct, col = condition, alpha = .2), width = .2,height = .015)+
geom_pointrange(data = ms2,aes(x = condition2, y = mean, col = condition,ymin = ci_lower, ymax = ci_upper), size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
facet_grid(design ~ phase , scales = "free_x", space = "free_x" ) +
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
guides(alpha = F)+
scale_color_solarized(name="Condition",
breaks=c("look", "lookLabel","point", "pointLabel","abs", "bar","bell","person","tornado"),
labels=c("Test - Look", "Test - Look + Label", "Test - Point", "Test - Point + Label","Control - Later", "Control - Barrier", "Control - Bell", "Control - Person", "Control - Tornado"))
d3 <- bind_rows(read_csv(file="cue_unintentional_tornado_between.data.csv"),
read_csv(file="cue_unintentional_between.data.csv"))%>%
mutate(trial_type = ifelse(trial == "train", "train", "test"),
condition = ifelse(control == "no","lookLabel","tornado"),
phase = "Intentional Control",
design = "Between") %>%
mutate(condition2 = ifelse(control == "yes", "cue_strength_unintentional_tornado_yes","cue_strength_unintentional_tornado_no"))
d <- bind_rows(d1,d2,d3)
ms <- d %>%
filter(trial_type == "test") %>%
mutate(design = relevel(as.factor(design), ref = "Within")) %>%
group_by(condition2,condition, design ,phase, id) %>%
summarise(correct = mean(correct))
ms
ms <- d %>%
filter(trial_type == "test") %>%
mutate(design = relevel(as.factor(design), ref = "Within")) %>%
group_by(condition2,condition, design ,phase, id) %>%
summarise(correct = mean(correct))
ms2 <- ms %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = ms, aes(x = condition2, y = correct, col = condition, alpha = .2), width = .2,height = .015)+
geom_pointrange(data = ms2,aes(x = condition2, y = mean, col = condition,ymin = ci_lower, ymax = ci_upper), size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
facet_grid(design ~ phase , scales = "free_x", space = "free_x" ) +
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
guides(alpha = F)+
scale_color_solarized(name="Condition",
breaks=c("look", "lookLabel","point", "pointLabel","abs", "bar","bell","person","tornado"),
labels=c("Test - Look", "Test - Look + Label", "Test - Point", "Test - Point + Label","Control - Later", "Control - Barrier", "Control - Bell", "Control - Person", "Control - Tornado"))
ggplot() +
geom_jitter(data = ms, aes(x = condition2, y = correct, col = condition, alpha = .2), width = .2,height = .015)+
geom_pointrange(data = ms2,aes(x = condition2, y = mean, col = condition,ymin = ci_lower, ymax = ci_upper), size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
facet_grid(design ~ phase , scales = "free_x", space = "free_x" ) +
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
guides(alpha = F)
ms2
d2
d3 <- bind_rows(read_csv(file="cue_unintentional_tornado_between.data.csv"),
read_csv(file="cue_unintentional_between.data.csv"))%>%
mutate(trial_type = ifelse(trial == "train", "train", "test"),
condition = ifelse(control == "no","lookLabel","tornado"),
phase = "Intentional Control",
design = "Between") %>%
mutate(condition2 = ifelse(control == "no", "cue_strength_unintentional_tornado_no","cue_strength_unintentional_tornado_yes"))
d <- bind_rows(d1,d2,d3)
ms <- d %>%
filter(trial_type == "test") %>%
mutate(design = relevel(as.factor(design), ref = "Within")) %>%
group_by(condition2,condition, design ,phase, id) %>%
summarise(correct = mean(correct))
ms2 <- ms %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = ms, aes(x = condition2, y = correct, col = condition, alpha = .2), width = .2,height = .015)+
geom_pointrange(data = ms2,aes(x = condition2, y = mean, col = condition,ymin = ci_lower, ymax = ci_upper), size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
facet_grid(design ~ phase , scales = "free_x", space = "free_x" ) +
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
guides(alpha = F)+
scale_color_solarized(name="Condition",
breaks=c("look", "lookLabel","point", "pointLabel","abs", "bar","bell","person","tornado"),
labels=c("Test - Look", "Test - Look + Label", "Test - Point", "Test - Point + Label","Control - Later", "Control - Barrier", "Control - Bell", "Control - Person", "Control - Tornado"))
ggplot() +
geom_jitter(data = ms, aes(x = condition2, y = correct, col = condition, alpha = .2), width = .2,height = .015)+
geom_pointrange(data = ms2,aes(x = condition2, y = mean, col = condition,ymin = ci_lower, ymax = ci_upper), size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
facet_grid(design ~ phase , scales = "free_x", space = "free_x" ) +
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
guides(alpha = F)
ggplot() +
geom_jitter(data = ms, aes(x = condition2, y = correct, col = condition, alpha = .2), width = .2,height = .015)+
geom_pointrange(data = ms2,aes(x = condition2, y = mean, col = condition,ymin = ci_lower, ymax = ci_upper), size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
facet_grid(design ~ phase , scales = "free_x", space = "free_x" ) +
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
guides(alpha = F)+
scale_color_solarized(name="Condition",
breaks=c("look", "lookLabel","point", "pointLabel","abs", "bar","bell","person","tornado"),
labels=c("Test - Look", "Test - Look + Label", "Test - Point", "Test - Point + Label","Control - Later", "Control - Barrier", "Control - Bell", "Control - Person", "Control - Tornado"))
ggplot() +
geom_jitter(data = ms, aes(x = condition2, y = correct, col = condition, alpha = .2), width = .2,height = .015)+
geom_pointrange(data = ms2,aes(x = condition2, y = mean, col = condition,ymin = ci_lower, ymax = ci_upper), size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
facet_grid(design ~ phase , scales = "free_x", space = "free_x" ) +
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
guides(alpha = F)+
scale_color_viridis(name="Condition",
breaks=c("look", "lookLabel","point", "pointLabel","abs", "bar","bell","person","tornado"),
labels=c("Test - Look", "Test - Look + Label", "Test - Point", "Test - Point + Label","Control - Later", "Control - Barrier", "Control - Bell", "Control - Person", "Control - Tornado"))
ggplot() +
geom_jitter(data = ms, aes(x = condition2, y = correct, col = condition, alpha = .2), width = .2,height = .015)+
geom_pointrange(data = ms2,aes(x = condition2, y = mean, col = condition,ymin = ci_lower, ymax = ci_upper), size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
facet_grid(design ~ phase , scales = "free_x", space = "free_x" ) +
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
guides(alpha = F)+
scale_color_solarized(name="Condition",
breaks=c("look", "lookLabel","point", "pointLabel","abs", "bar","bell","person","tornado"),
labels=c("Test - Look", "Test - Look + Label", "Test - Point", "Test - Point + Label","Control - Later", "Control - Barrier", "Control - Bell", "Control - Person", "Control - Tornado"))
d <- bind_rows(d1,d2)
ms <- d %>%
filter(trial_type == "test") %>%
mutate(design = relevel(as.factor(design), ref = "Within")) %>%
group_by(condition2,condition, design ,phase, id) %>%
summarise(correct = mean(correct))
ms2 <- ms %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = ms, aes(x = condition2, y = correct, col = condition, alpha = .2), width = .2,height = .015)+
geom_pointrange(data = ms2,aes(x = condition2, y = mean, col = condition,ymin = ci_lower, ymax = ci_upper), size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
facet_grid(design ~ phase , scales = "free_x", space = "free_x" ) +
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
guides(alpha = F)+
scale_color_solarized(name="Condition",
breaks=c("look", "lookLabel","point", "pointLabel","abs", "bar","bell","person","tornado"),
labels=c("Test - Look", "Test - Look + Label", "Test - Point", "Test - Point + Label","Control - Later", "Control - Barrier", "Control - Bell", "Control - Person", "Control - Tornado"))
library(tidyverse)
library(knitr)
library(langcog)
library(ggthemes)
d1 <- bind_rows(read_csv(file="cue_control_test.data.csv"),
read_csv(file="cue_control_barrier.data.csv"),
read_csv(file="cue_control_later.data.csv"),
read_csv(file="cue_control_1.data.csv"),
read_csv(file="cue_control_2.data.csv"),
read_csv(file="cue_within.data.csv"),
read_csv(file="cue.btw.look.data.csv"),
read_csv(file="cue.btw.lookLabel.data.csv"),
read_csv(file="cue.btw.point.data.csv"),
read_csv(file="cue.btw.pointLabel.data.csv")) %>%
mutate(trial_type = ifelse(trial == "train", "train", "test")) %>%
mutate(control = ifelse(is.na(control) , "test", control)) %>%
mutate(condition = ifelse(control == "no" | control == "test" , condition, control)) %>%
mutate(phase = ifelse(control == "test", "Cue Types", "Epistemic Control")) %>%
mutate(design = ifelse(experiment == "cue_strength_controls" | experiment == "cue_strength_controls_replication" | experiment == "cue_strength_within" , "Within", "Between"),
condition2 = condition)
d2 <- bind_rows(read_csv(file="cue_unintentional_bell.data.csv"),
read_csv(file="cue_unintentional_person.data.csv"),
read_csv(file="cue_unintentional_tornado.data.csv"))%>%
mutate(trial_type = ifelse(trial == "train", "train", "test"),
condition = ifelse(control == "no",condition, ifelse(experiment == "cue_strength_unintentional_tornado", "tornado", ifelse(experiment == "cue_strength_unintentional_person", "person", "bell"))),
phase = "Intentional Control",
design = "Within") %>%
mutate(condition2 = paste(experiment,control,sep="_"))
d3 <- bind_rows(read_csv(file="cue_unintentional_tornado_between.data.csv"),
read_csv(file="cue_unintentional_between.data.csv"))%>%
mutate(trial_type = ifelse(trial == "train", "train", "test"),
condition = ifelse(control == "no","lookLabel","tornado"),
phase = "Intentional Control",
design = "Between") %>%
mutate(condition2 = ifelse(control == "no", "cue_strength_unintentional_tornado_no","cue_strength_unintentional_tornado_yes"))
ms <- d %>%
filter(trial_type == "test") %>%
mutate(design = relevel(as.factor(design), ref = "Within")) %>%
group_by(condition2,condition, design ,phase, id) %>%
summarise(correct = mean(correct))
ms2 <- ms %>%
multi_boot_standard(col = "correct")
ggplot() +
geom_jitter(data = ms, aes(x = condition2, y = correct, col = condition, alpha = .2), width = .2,height = .015)+
geom_pointrange(data = ms2,aes(x = condition2, y = mean, col = condition,ymin = ci_lower, ymax = ci_upper), size = 1)+
geom_hline(yintercept = 0.5, lty=2)+
labs(x="",y="Proportion Expected Choice")+
facet_grid(design ~ phase , scales = "free_x", space = "free_x" ) +
theme_few(base_size = 12) +
ylim(-0.05,1.05)+
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+
guides(alpha = F)+
scale_color_solarized(name="Condition",
breaks=c("look", "lookLabel","point", "pointLabel","abs", "bar","bell","person","tornado"),
labels=c("Test - Look", "Test - Look + Label", "Test - Point", "Test - Point + Label","Control - Later", "Control - Barrier", "Control - Bell", "Control - Person", "Control - Tornado"))
